<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com</groupId>
    <artifactId>Djeat</artifactId>
    <packaging>war</packaging>
    <name>Djeat</name>
    <version>1.0</version>

    <properties>
        <!--
           Explicitly declaring the source encoding eliminates the following message:
           [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
           To set the jboss.home environment variable the Maven way, set the jboss.home property in an active profile in
           the Maven 2 settings.xml file
        -->
        <jboss.home>${env.JBOSS_HOME}</jboss.home>
        <jboss.domain>default</jboss.domain>
        <!-- The version of Weld extensions in use -->
        <weld.extensions.version>1.0.0-CR2</weld.extensions.version>
    </properties>

    <repositories>
        <!-- Several key Java EE APIs and RIs are missing from the Maven Central Repository -->
        <!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
        <repository>
            <id>repository.jboss.org</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/maven2</url>
        </repository>
         <repository>
            <url>http://repository.primefaces.org/</url>
            <id>PrimeFaces-maven-lib</id>
            <layout>default</layout>
            <name>Repository for library PrimeFaces-maven-lib</name>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- Import scope will provide versions for dependencies below. -->
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-extensions-bom</artifactId>
                <version>${weld.extensions.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- CDI (JSR-299) -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.1-PRD</version>
        </dependency>
        <!-- EJB -->
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!-- Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated, @Resource) -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- Bean Validation (JSR-303) -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>
        <!-- Bean Validation Implementation -->
        <!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
        <!-- Hibernate Validator is only the JSR-303 implementation at the moment, so we can assume it's provided -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.1.Final</version>
        </dependency>
        <!-- JSF -->
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>2.1</version>
        </dependency>

        <!--POSTGRESQL-->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901.jdbc4</version>
        </dependency>
               

        <!-- JPA -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>
        
        <!--HIBERNATE-->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>

        <!-- Optional, but highly recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.5</version>
        </dependency>
        
        <!--PRIMEFACES-->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>3.5</version>
        </dependency>
        
        <!--PRIMEFACES EXTENSIONS-->
        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
            <version>0.7.1</version>
        </dependency>
        
        <!--JBOSS WELD-->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-api</artifactId>
            <version>2.0.Final</version>
        </dependency>

        <!--DEPENDENCY LOGMANAGER-->
        <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <version>1.5.1.Final</version>
        </dependency>
        <!-- Needed on JBoss AS as EL is out of date -->
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>el-impl</artifactId>
            <scope>runtime</scope>
            <!-- FIXME this version should be in the Weld API BOM -->
            <version>2.1.2-b04</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.el</groupId>
                    <artifactId>el-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>3.0</version>
            <type>jar</type>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Compiler plugin enforces Java 1.6 compatiblity -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- Eclipse plugin can force download of source and JavaDoc jars -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                 <version>3.1.1</version>
                <configuration>
                    <wtpversion>2.0</wtpversion>
                    <!--
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    -->
                </configuration>
            </plugin>

            <!-- Configure the JBoss AS Maven deploy plugin -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>7.5.Final</version>
                <configuration>
                    <jbossHome>${jboss.home}</jbossHome>
                    <serverName>${jboss.domain}</serverName>
                    <fileNames>
                        <fileName>${project.build.directory}/${project.build.finalName}.war</fileName>
                    </fileNames> 
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
